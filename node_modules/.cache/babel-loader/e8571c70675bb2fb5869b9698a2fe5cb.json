{"ast":null,"code":"var _jsxFileName = \"C:\\\\SDP_team_project\\\\airline-reservation-system_sdp\\\\src\\\\pages\\\\registeredCustomer\\\\pages\\\\covid-19\\\\components\\\\CountryPicker\\\\CountryPicker.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport countryPicker from './CountryPicker.module.scss';\nimport { fetchCountries } from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CountryPicker = ({\n  handleCountryChange\n}) => {\n  _s();\n\n  const [fetchedCountries, setFetchedCountries] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setFetchedCountries(await fetchCountries());\n    };\n\n    fetchAPI();\n  }, [setFetchedCountries]);\n  return /*#__PURE__*/_jsxDEV(FormControl, {\n    className: countryPicker.formControl,\n    children: /*#__PURE__*/_jsxDEV(NativeSelect, {\n      defaultValue: \"\",\n      onChange: e => {\n        handleCountryChange(e.target.value);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Worldwide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), fetchedCountries.map((country, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: country,\n        children: [\" \", country, \" \"]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 55\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CountryPicker, \"Do9onPiNE5+jzUqGJ2UrSR1Aye8=\");\n\n_c = CountryPicker;\nexport default CountryPicker;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountryPicker\");","map":{"version":3,"sources":["C:/SDP_team_project/airline-reservation-system_sdp/src/pages/registeredCustomer/pages/covid-19/components/CountryPicker/CountryPicker.jsx"],"names":["React","useState","useEffect","NativeSelect","FormControl","countryPicker","fetchCountries","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchAPI","formControl","e","target","value","map","country","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,mBAA1C;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,cAAT,QAA+B,WAA/B;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAA2B;AAAA;;AAC7C,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,CAAC,EAAD,CAAxD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMS,QAAQ,GAAG,YAAY;AACzBD,MAAAA,mBAAmB,CAAC,MAAMJ,cAAc,EAArB,CAAnB;AACH,KAFD;;AAIAK,IAAAA,QAAQ;AAEX,GARQ,EAQN,CAACD,mBAAD,CARM,CAAT;AAUA,sBACI,QAAC,WAAD;AAAa,IAAA,SAAS,EAAEL,aAAa,CAACO,WAAtC;AAAA,2BACI,QAAC,YAAD;AAAc,MAAA,YAAY,EAAC,EAA3B;AAA8B,MAAA,QAAQ,EAAGC,CAAD,IAAM;AAACL,QAAAA,mBAAmB,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAnB;AAAoC,OAAnF;AAAA,8BACI;AAAS,QAAA,KAAK,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKN,gBAAgB,CAACO,GAAjB,CAAqB,CAACC,OAAD,EAAUC,CAAV,kBAAgB;AAAgB,QAAA,KAAK,EAAED,OAAvB;AAAA,wBAAkCA,OAAlC;AAAA,SAAaC,CAAb;AAAA;AAAA;AAAA;AAAA,cAArC,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CArBD;;GAAMX,a;;KAAAA,a;AAuBN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\nimport countryPicker from './CountryPicker.module.scss';\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n\r\n    }, [setFetchedCountries]);\r\n\r\n    return (\r\n        <FormControl className={countryPicker.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e)=> {handleCountryChange(e.target.value)}}>\r\n                <option  value=\"\">Worldwide</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}> {country} </option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;"]},"metadata":{},"sourceType":"module"}