{"ast":null,"code":"var _jsxFileName = \"C:\\\\SDP_team_project\\\\airline-reservation-system_sdp\\\\src\\\\pages\\\\registeredCustomer\\\\pages\\\\weather\\\\components\\\\OtherWeatherData.js\";\nimport React from 'react'; // import { transform } from '@babel/core';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass OtherWeatherData extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getSunsetSunRise = timestamp => {\n      let date = new Date(timestamp * 1000);\n      let time = date.getTime();\n      let localOffset = date.getTimezoneOffset() * 60000;\n      let utc = time + localOffset;\n      let newDate = new Date(utc + 1000 * this.props.data.timezone);\n      return newDate;\n    };\n\n    this.formatTime = date => {\n      let hours = date.getHours();\n      let minutes = date.getMinutes(); //let seconds = date.getSeconds();\n\n      if (minutes < 10) {\n        minutes = '0' + minutes;\n      }\n\n      let ampm = 'am';\n\n      if (hours > 12) {\n        hours = hours - 12;\n        ampm = 'pm';\n      } else if (hours === 0) {\n        hours = 12;\n        ampm = 'am';\n      } else if (hours === 12) {\n        ampm = 'pm';\n      }\n\n      return hours + \":\" + minutes + \" \" + ampm;\n    };\n  }\n\n  render() {\n    if (this.props.data.main) {\n      let sunrise = this.props.data.sys.sunrise;\n      let sunset = this.props.data.sys.sunset;\n      let transform = {\n        transform: 'rotate(' + (this.props.data.wind.deg + 90) + 'deg)'\n      };\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"otherWeatherData\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"windSpeed\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [this.props.data.wind.speed, \" m/s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"./arrow.png\",\n            className: \"arrow\",\n            alt: \"direction\",\n            style: transform\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Wind\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weatherInfoContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left_block\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [(this.props.data.visibility / 1609.344).toFixed(2), \" MI\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Visibility\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [this.props.data.main.pressure / 1000, \" Pa\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Pressure\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right_block\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: [this.props.data.main.humidity, \" %\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Humidity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setRise\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sunrise\",\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: this.formatTime(this.getSunsetSunRise(sunrise))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Sunrise\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sunset\",\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: this.formatTime(this.getSunsetSunRise(sunset))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Sunset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this);\n    } else return null;\n  }\n\n}\n\nexport default OtherWeatherData;","map":{"version":3,"sources":["C:/SDP_team_project/airline-reservation-system_sdp/src/pages/registeredCustomer/pages/weather/components/OtherWeatherData.js"],"names":["React","OtherWeatherData","Component","getSunsetSunRise","timestamp","date","Date","time","getTime","localOffset","getTimezoneOffset","utc","newDate","props","data","timezone","formatTime","hours","getHours","minutes","getMinutes","ampm","render","main","sunrise","sys","sunset","transform","wind","deg","speed","visibility","toFixed","pressure","humidity"],"mappings":"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","sourcesContent":["import React from 'react';\r\n// import { transform } from '@babel/core';\r\n\r\nclass OtherWeatherData extends React.Component {\r\n  getSunsetSunRise = (timestamp) => {\r\n    let date = new Date(timestamp * 1000);\r\n    let time = date.getTime();\r\n    let localOffset = date.getTimezoneOffset() * 60000;\r\n    let utc = time + localOffset;\r\n    let newDate = new Date(utc + (1000 * this.props.data.timezone));\r\n    return newDate;\r\n  }\r\n\r\n  formatTime = (date) => {\r\n    let hours = date.getHours();\r\n    let minutes = date.getMinutes();\r\n\r\n    //let seconds = date.getSeconds();\r\n    if (minutes < 10) {\r\n      minutes = '0' + minutes;\r\n    }\r\n\r\n    let ampm = 'am';\r\n    if (hours > 12) {\r\n      hours = hours - 12;\r\n      ampm = 'pm';\r\n    } else if (hours === 0) {\r\n      hours = 12;\r\n      ampm = 'am'\r\n    } else if (hours === 12) {\r\n      ampm = 'pm'\r\n    }\r\n    return hours + \":\" + minutes + \" \" + ampm;\r\n  }\r\n\r\n  render() {\r\n    if (this.props.data.main) {\r\n      let sunrise = this.props.data.sys.sunrise;\r\n      let sunset = this.props.data.sys.sunset;\r\n      let transform = {\r\n        transform: 'rotate(' + (this.props.data.wind.deg + 90) + 'deg)',\r\n      };\r\n\r\n      return (\r\n        <div className=\"otherWeatherData\">\r\n          <div className=\"windSpeed\">\r\n            <h1>{this.props.data.wind.speed} m/s</h1>\r\n            <img src=\"./arrow.png\" className=\"arrow\" alt=\"direction\" style={transform} />\r\n            <h2>Wind</h2>\r\n          </div>\r\n          <div className=\"weatherInfoContainer\">\r\n            <div className=\"left_block\">\r\n              <h1>{(this.props.data.visibility / 1609.344).toFixed(2)} MI</h1>\r\n              <h2>Visibility</h2>\r\n\r\n              <h1>{this.props.data.main.pressure / 1000} Pa</h1>\r\n              <h2>Pressure</h2>\r\n            </div>\r\n            <div className=\"right_block\">\r\n              <h1>{this.props.data.main.humidity} %</h1>\r\n              <h2>Humidity</h2>\r\n              <div className=\"setRise\">\r\n                <div className='sunrise'>\r\n                  <h1>{this.formatTime(this.getSunsetSunRise(sunrise))}</h1>\r\n                  <h2>Sunrise</h2>\r\n                </div>\r\n                <div className='sunset'>\r\n                  <h1>{this.formatTime(this.getSunsetSunRise(sunset))}</h1>\r\n                  <h2>Sunset</h2>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else return null;\r\n  }\r\n}\r\n\r\nexport default OtherWeatherData;"]},"metadata":{},"sourceType":"module"}