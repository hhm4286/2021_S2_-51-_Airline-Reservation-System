{"ast":null,"code":"var _jsxFileName = \"C:\\\\SDP_team_project\\\\airline-reservation-system_sdp\\\\src\\\\pages\\\\registeredCustomer\\\\pages\\\\covid-19\\\\components\\\\Chart\\\\Chart.jsx\",\n    _s = $RefreshSig$();\n\nimport { fetchDailyData } from '../../API';\nimport { Line, Bar } from 'react-chartjs-2';\nimport chart from './Chart.module.scss';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chart = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  _s();\n\n  const [dailyData, setDailyData] = useState([]);\n  useEffect(() => {\n    const fetchAPI = async () => {\n      setDailyData(await fetchDailyData());\n    };\n\n    fetchAPI();\n  }, []);\n  const lineChart = dailyData.length ?\n  /*#__PURE__*/\n\n  /* Line */\n  _jsxDEV(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: 'orange',\n        label: '#infected',\n        borderColor: 'hsl(36, 88%, 53%',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'red',\n        fill: true\n      }]\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 17\n  }, this) : null;\n  const barChart = confirmed ?\n  /*#__PURE__*/\n\n  /* Bar */\n  _jsxDEV(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgb(209, 127, 19)',\n        /* infected */\n        'rgba(11, 204, 69, 0.8)',\n        /* Recovered */\n        'rgba(255, 0, 0, 0.9)',\n        /* Death */\n        'hsl(36, 88%, 53%', 'rgb(36, 231, 94)', 'rgb(241, 30, 30)'],\n        data: [confirmed.value, confirmed.value - recovered.value - deaths.value, deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 17\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: chart.container,\n    children: country ? barChart : lineChart\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chart, \"k/DxwZSu/1zHTtHlTKnhZOTCIIE=\");\n\n_c = Chart;\nexport default Chart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["C:/SDP_team_project/airline-reservation-system_sdp/src/pages/registeredCustomer/pages/covid-19/components/Chart/Chart.jsx"],"names":["fetchDailyData","Line","Bar","chart","React","useState","useEffect","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchAPI","lineChart","length","labels","map","date","datasets","label","borderColor","fill","barChart","backgroundColor","value","legend","display","title","text","container"],"mappings":"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","sourcesContent":["import { fetchDailyData } from '../../API';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport chart from './Chart.module.scss';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        fetchAPI();\r\n\r\n    }, []);\r\n\r\n    const lineChart = ( dailyData.length ? (\r\n                /* Line */\r\n                <Line\r\n                    data={{\r\n                        labels: dailyData.map(({ date }) => date),\r\n                        datasets: [{\r\n                            data: dailyData.map(({ confirmed }) => confirmed),\r\n                            label: 'Infected',\r\n                            borderColor: 'orange',\r\n                            label: '#infected',\r\n                            borderColor: 'hsl(36, 88%, 53%',\r\n                            fill: true,\r\n                        }, {\r\n                            data: dailyData.map(({ deaths }) => deaths),\r\n                            label: 'Deaths',\r\n                            borderColor: 'red',\r\n                            fill: true,\r\n                        }],\r\n                    }}\r\n                />) : null\r\n    );\r\n\r\n    const barChart = ( confirmed  ? (\r\n                /* Bar */\r\n                <Bar\r\n                    data={{\r\n                        labels: ['Infected', 'Recovered', 'Deaths'],\r\n                        datasets: [{\r\n                            label: 'People',\r\n                            backgroundColor: [\r\n                                'rgb(209, 127, 19)', /* infected */\r\n                                'rgba(11, 204, 69, 0.8)', /* Recovered */\r\n                                'rgba(255, 0, 0, 0.9)', /* Death */\r\n                                'hsl(36, 88%, 53%',\r\n                                'rgb(36, 231, 94)',\r\n                                'rgb(241, 30, 30)',\r\n                            ],\r\n                            data: [confirmed.value, confirmed.value - recovered.value - deaths.value, deaths.value]\r\n                        }]\r\n                    }}\r\n\r\n                    options={{\r\n                        legend: { display: false },\r\n                        title: { display: true, text: `Current state in ${country}` },\r\n                    }}\r\n                />\r\n            ) : null\r\n    );\r\n\r\n    return (\r\n        <div className={chart.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}